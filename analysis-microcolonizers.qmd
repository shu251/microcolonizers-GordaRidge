---
title: "microcolonizer analysis"
format: html
editor: visual
---

# Set up R environment

```{r}
library(tidyverse)
library(phyloseq)
```

## Import all data

```{r}
load("input-data/GR_Microcolonizer_data.RData", verbose = TRUE)
load("input-data/temp-data.RData", verbose = TRUE)
```

`asv_wtax_18` data includes 18S rRNA gene sequences from hydrothermal vents at Gorda Ridge and the microcolonizer substrates.

`asv16s_df` same sample set as 18S, but with 16S rRNA gene sequences.

# Subset only Microcolonizer data

*GOALS*

1.  Visualize a summary of the protistan (18S rRNA gene) and bacteria/archaeal (16S rRNA gene) community within diffuse vents, at Mt Edwards especially, and then an overall look at the different microcolonizers.

2.  Look at different microcolonizer samples with respect to the temperature profile. Are the communities different by temperature.

```{r}
head(asv_wtax_18)
mc_18s <- asv_wtax_18 |> 
  filter(SAMPLETYPE == "Microcolonizer") |> 
  group_by(MC, Substrate, FeatureID, Taxon, Domain, 
           Supergroup, Phylum, Class, Order, Family, Genus, Species) |> 
  summarize(SEQ_AVG = mean(SEQUENCE_COUNT)) |> 
  unite(TAX_LEVEL, Supergroup, Phylum, sep = "-", remove = FALSE)
# head(mc_18s)

# head(asv16s_df)
mc_16s <- asv16s_df |> 
  filter(Sampletype == "Microcolonizer") |> 
  group_by(MC, Substrate, FeatureID, Taxon, Domain, 
          Phylum, Class, Order, Family, Genus, Species) |> 
  summarize(SEQ_AVG = mean(SEQUENCE_COUNT)) |> 
  unite(TAX_LEVEL, Domain, Phylum, sep = "-", remove = FALSE)
# head(mc_16s)
```

## Plot temperature profiles only

Get temperature

```{r}
# head(log_files_all)
# Factor by colors and pairs of MCs
mc_ids <- c(1, 2, 3, 4, 5, 6)
log_files_all$MC_ORDER <- factor(log_files_all$MC, levels = mc_ids)
mc_col <- c("#d7301f", "#4a1486", "#9e9ac8", "#fc8d59", "#2171b5", "#6baed6")
names(mc_col) <- mc_ids
temps <- ggplot(log_files_all, aes(x = Parsed_time_EST, y = Value, color = as.factor(MC_ORDER))) +
  geom_step() +
  scale_color_manual(values = mc_col) +
  theme_classic(base_size = 14) +
  labs(x = "", y = "Temperature •C") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
        legend.title = element_blank())
temps
```

## Join temperature and tax information

```{r}
temp_row <- ggplot(log_files_all, aes(x = Parsed_time_EST, y = Value, color = as.factor(MC_ORDER))) +
  geom_step() +
  scale_color_manual(values = mc_col) +
  theme_classic(base_size = 14) +
  facet_grid(rows = vars(MC_ORDER)) +
  labs(x = "", y = "Temperature •C") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
        legend.title = element_blank(),
        legend.position = "left")
```

```{r, fig.height=12, fig.width=7}
# head(mc_16s)
bac_row <- mc_16s |> 
  group_by(TAX_LEVEL, MC, Substrate) |> 
  summarize(SUM = sum(SEQ_AVG)) |> 
  ggplot(aes(x = Substrate, y = SUM, fill = TAX_LEVEL)) +
    geom_bar(stat = "identity", position = "fill", color = "black") +
  facet_grid(rows = vars(MC)) +
  theme_classic(base_size = 14) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
        legend.title = element_blank(),
        legend.position = "none")
bac_row
```

```{r, fig.height=12, fig.width=7}
# head(mc_16s)
euk_row <- mc_18s |> 
  group_by(TAX_LEVEL, MC, Substrate) |> 
  summarize(SUM = sum(SEQ_AVG)) |> 
  ggplot(aes(x = Substrate, y = SUM, fill = TAX_LEVEL)) +
    geom_bar(stat = "identity", position = "fill", color = "black") +
  facet_grid(rows = vars(MC)) +
  theme_classic(base_size = 14) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
        legend.title = element_blank(),
        legend.position = "none")
euk_row
```

```{r, fig.height=15, fig.width=10}
library(patchwork)
temp_row + bac_row + euk_row + patchwork::plot_layout(nrow = 1,widths = c(1, 0.8, 0.4))
```

## Plot species richness (total ASVs) with temperature

*Question*: Does overall species richness change within the microcolonizers? over "time" and with respect to temperature. Same for protists and prokaryotes?

Show differences between microcolonizers with temperature.

```{r}

```

*continuing question*: if there are specific patterns in species richness for certain microcolonizers, are there certain species that are driving this pattern?

# Paring down the data

## Eukaryotes

```{r}
head(asv_wtax_18)
length(unique(asv_wtax_18$FeatureID))
unique(asv_wtax_18$Domain)
```

```{r}
mc_18S_df <- asv_wtax_18 |> 
  select(-SAMPLE) |> 
  # Subset to data for THIS specific project
  filter(SAMPLETYPE == "Microcolonizer" | VENT == "Mt Edwards" | VENT == "Deep seawater") |> 
  filter(Domain == "Eukaryota") |>
  mutate(SUBSTRATE = str_replace_all(Substrate, "z2", "z")) |> 
  mutate(SAMPLE = case_when(
    SAMPLETYPE == "Microcolonizer" ~ paste(MC, SUBSTRATE, sep = "-"),
    VENT == "Deep seawater" ~ "Background seawater",
    VENT == "Mt Edwards" ~ "Mt Edwards diffuse fluid"
  )) |>
  group_by(SAMPLE, FeatureID, Taxon, Domain, 
           Supergroup, Phylum, Class, Order, Family, Genus, Species) |> 
  summarize(SEQ_AVG = mean(SEQUENCE_COUNT)) |> 
  filter(SEQ_AVG > 0)
```

```{r}
# head(mc_tmp_18)
# unique(mc_tmp_18$Domain)
# unique(mc_tmp_18$SAMPLE)
```


### Filter by ASV distribution (18S)

```{r}
# ASV filtering by how many sequences are present for each ASV
## Total number of ASVs with Unassigned
length(unique(mc_18S_df$FeatureID))

# ID substrates only
mc_tmp_18_onsubstrates <- mc_18S_df %>% 
  filter(grepl("MC", SAMPLE))
unique(mc_tmp_18_onsubstrates$SAMPLE) # check
length(unique(mc_tmp_18_onsubstrates$FeatureID))

# Repeat for opposite:
bkgd_vent <- mc_18S_df %>% 
  filter(!(grepl("MC", SAMPLE)))
unique(bkgd_vent$SAMPLE)


# Isolate a list of feature IDs in background and vent fluid
bkgd_vent_ASV_list <- as.character(unique(bkgd_vent$FeatureID))

# To get substrate ONLY, remove this character list
mc_tmp_18_onsubstrates_ONLY <- mc_tmp_18_onsubstrates %>% 
  filter(!(FeatureID %in% bkgd_vent_ASV_list))

head(mc_tmp_18_onsubstrates_ONLY)
length(unique(mc_tmp_18_onsubstrates_ONLY$FeatureID))
```

## Bacteria

As long as an ASV appears at least once to have more than 100 sequences, keep the ASV.

```{r}
# head(asv16s_df)
mc_16S_df <- asv16s_df |> 
  filter(Sampletype == "Microcolonizer" | LocationName == "Mt Edwards Vent" | LocationName == "Deep seawater" & STATUS == "keep") |> 
  mutate(SAMPLE = case_when(
    Sampletype == "Microcolonizer" ~ paste(MC, Substrate, sep = "-"),
    LocationName == "Deep seawater" ~ "Background seawater",
    LocationName == "Mt Edwards Vent" ~ "Mt Edwards diffuse fluid"
  )) |> 
  group_by(SAMPLE, FeatureID, Taxon, Domain, 
          Phylum, Class, Order, Family, Genus, Species) |> 
  summarize(SEQ_AVG = mean(SEQUENCE_COUNT)) |> 
  filter(!(Domain == "Unassigned") & !(Domain == "Eukaryota")) |> 
  filter(SEQ_AVG > 0)
```

```{r}
save(mc_18S_df, mc_16S_df, file = "input-data/microcolonizer_inputdata_02082025.RData")
```


> ML work on ensuring data files and tables regarding ASV distribution are determined.

```{r}

```



## Filter for Network Analysis

> SH

Create filtered 18S dataset and convert to phyloseq object.

```{r}
# head(mc_tmp_18)
# mat_18s_filtered <- mc_tmp_18 |> ungroup() |> 
#   filter(FeatureID %in% keep_18) |> 
#   filter(SEQ_AVG > 0) |> 
#   select(FeatureID, SAMPLE, SEQ_AVG) |> 
#   pivot_wider(names_from = SAMPLE, values_from = SEQ_AVG, values_fill = 0) |> 
#   select(-`MC4-Shell`) |> 
#   column_to_rownames(var = "FeatureID") |> 
#   as.matrix()
# # colnames(mat_18s_filtered)
# 
# mat_tax18_filtered <- mc_tmp_18 |> ungroup() |> 
#   filter(FeatureID %in% keep_18) |> 
#   select(FeatureID, Taxon, Domain, Phylum, Class, Order, Family, Genus, Species) |> 
#   distinct() |> 
#   column_to_rownames(var = "FeatureID") |> 
#   as.matrix()
```

SPEIC-EASI network analysis requires samples to be in the same order. Additionally, the bacteria set of samples has more substrate options than the eukaryote dataset.

```{r}
# colnames(mat_18s_filtered)
# set_of_samples <- colnames(mat_18s_filtered) # Make character list
# class(set_of_samples)
```




```{r}
# set_of_samples
# unique(tmptmp$SAMPLE)
```

Create filtered 16S dataset and convert to phyloseq object.

```{r}
# head(mc_tmp)
# mat_16s_filtered <- mc_tmp |> ungroup() |> 
#   filter(FeatureID %in% keep) |> 
#   filter(SEQ_AVG > 0) |> 
#   select(FeatureID, SAMPLE, SEQ_AVG) |> 
#   pivot_wider(names_from = SAMPLE, values_from = SEQ_AVG, values_fill = 0) |> 
#   ungroup() |> 
#   select(FeatureID, all_of(set_of_samples)) |> 
#   column_to_rownames(var = "FeatureID") |> 
#   as.matrix()
# colnames(mat_16s_filtered)
# 
# mat_tax_filtered <- mc_tmp |> ungroup() |> 
#   filter(FeatureID %in% keep) |> 
#   select(FeatureID, Taxon, Domain, Phylum, Class, Order, Family, Genus, Species) |> 
#   distinct() |> 
#   column_to_rownames(var = "FeatureID") |> 
#   as.matrix()
```



```{r}
# identical(colnames(mat_16s_filtered), colnames(mat_18s_filtered))
```


# Explore research questions (preliminary)

```{r}
load("input-data/microcolonizer_inputdata_02082025.RData", verbose = TRUE)
```

## Presence absense with barplots to ID taxa distribution

- incorporate ML's code to here!
- maybe remove low relative abundance ASVs?




## Diversity indices

### 18S diversity indices

Prep 2 different data types:

```{r}
head(mc_18S_df)
unique(mc_18S_df$SAMPLE)

sum_across_substrates <- mc_18S_df %>% 
  separate(SAMPLE, into = c("SAMPLE_ID", "SUBSTRATE"), sep = "-", remove = FALSE) %>% 
  group_by(SAMPLE_ID, FeatureID) %>% 
    summarise(SUM = sum(SEQ_AVG))


microcol_only <- mc_18S_df %>% 
  separate(SAMPLE, into = c("SAMPLE_ID", "SUBSTRATE"), sep = "-", remove = FALSE) %>% 
  filter(!is.na(SUBSTRATE)) %>% 
  group_by(SAMPLE, SUBSTRATE, FeatureID) %>% 
  summarise(SUM = sum(SEQ_AVG))

# unique(sum_across_substrates$SUBSTRATE)
# head(microcol_only)
```

Plot total ASVs on y-axis for each sample (x-axis).
```{r}
```

Plot Shannon diversity on y-axis for each sample (x-axis).
```{r}
# First make dataset wide with columns as samples and featureIDs as rownames
wide_18S <- mc_18S_df %>% ungroup() %>% 
  # Select only columns we need
  select(SAMPLE, FeatureID, SEQ_AVG) %>% 
  pivot_wider(names_from = SAMPLE, values_from = SEQ_AVG, values_fill = 0) %>% 
  column_to_rownames(var = "FeatureID")

library(vegan)
```

```{r}
?vegdist()
?diversity()
class(wide_18S)
wide_18S_mat <- as.matrix(wide_18S)

# Standardize data ahead of time
# CLR, hellinger, standardize
stand_wide_18S_mat <- decostand(wide_18S_mat, method = "hellinger", MARGIN = 2, )
head(stand_wide_18S_mat)

# Shannon diversity:
shannon_18S <- diversity(stand_wide_18S_mat, index = "shannon", MARGIN = 2, equalize.groups = TRUE)
shannon_18S

# Inv Simp
inv_simp_18S <- diversity(stand_wide_18S_mat, index = "invsimpson", MARGIN = 2 , equalize.groups = TRUE)
inv_simp_18S
```




