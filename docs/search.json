[
  {
    "objectID": "import-qc-metabarcoding.html",
    "href": "import-qc-metabarcoding.html",
    "title": "Process metabarcoding data",
    "section": "",
    "text": "R libraries\n\nlibrary(tidyverse)\nlibrary(phyloseq)\nlibrary(decontam)\n\n\nmerged_tax &lt;- read_delim(\"../microeuks_deepbiosphere_datamine/microeuk-amplicon-survey/data-input/taxonomy.tsv\", delim = \"\\t\")\n\nmerged_asv &lt;- read_delim(\"../microeuks_deepbiosphere_datamine/microeuk-amplicon-survey/data-input/microeuk-merged-asv-table.tsv\", delim = \"\\t\", skip = 1)\n\nmetadata &lt;- read.delim(\"../microeuks_deepbiosphere_datamine/microeuk-amplicon-survey/data-input/samplelist-metadata.txt\")\n \nasv_wtax &lt;- merged_asv %&gt;%\n  select(FeatureID = '#OTU ID', everything()) %&gt;%\n  pivot_longer(cols = !FeatureID,\n               names_to = \"SAMPLE\", values_to = \"value\") %&gt;%\n  left_join(merged_tax, by = c(\"FeatureID\" = \"Feature ID\")) %&gt;%\n  left_join(metadata) %&gt;%\n  filter(SITE == \"GordaRidge\" | SITE == \"substrate\" | SITE == \"Laboratory\") %&gt;%\n  filter(!grepl(\"Siders_\", SAMPLE)) %&gt;%\n  filter(!(grepl(\"T0\", SAMPLE))) %&gt;%\n  filter(!(grepl(\"T24\", SAMPLE))) %&gt;%\n  filter(!(grepl(\"T36\", SAMPLE))) %&gt;%\n  mutate(DATASET = case_when(\n    grepl(\"_GR_\", SAMPLE) ~ \"GR\",\n    grepl(\"Gorda\", SAMPLE) ~ \"GR\",\n    grepl(\"_MCR_\", SAMPLE) ~ \"MCR\",\n    grepl(\"Axial\", SAMPLE) ~ \"Axial\",\n  TRUE ~ \"Control or blank\")) %&gt;%\n    separate(Taxon, c(\"Domain\", \"Supergroup\",\n                  \"Phylum\", \"Class\", \"Order\",\n                  \"Family\", \"Genus\", \"Species\"), sep = \";\", remove = FALSE)\n\n# fix naming, some controls sequenced separately.\ngr_substrate_fluid_asvs &lt;- asv_wtax %&gt;%\n  mutate(SAMPLE_tmp = case_when(\n    Sample_actual == \"\" ~ SAMPLE,\n    TRUE ~ Sample_actual\n  )) %&gt;%\n  select(-SAMPLE) %&gt;%\n  select(SAMPLE = SAMPLE_tmp, everything()) %&gt;%\n  filter(value &gt; 0)\n\n# save(gr_substrate_fluid_asvs, file = \"input-data/gordaridge_18S_asvs.RData\")\n\n\n\n\n\n\nImport sample description text file, import as phyloseq library, and remove potential contaminate ASVs and sequences. Catalog total number of ASVs and sequences removed from analysis.\n\n\n\n# head(gr_substrate_fluid_asvs)\ntax_matrix &lt;- gr_substrate_fluid_asvs %&gt;% \n  select(FeatureID, Taxon) %&gt;% \n  distinct() %&gt;% \n  separate(Taxon, c(\"Domain\", \"Supergroup\", \n                  \"Phylum\", \"Class\", \"Order\",\n                  \"Family\", \"Genus\", \"Species\"), sep = \";\", remove = FALSE) %&gt;% \n  column_to_rownames(var = \"FeatureID\") %&gt;% \n  as.matrix\n\nasv_matrix &lt;- gr_substrate_fluid_asvs %&gt;% \n  select(FeatureID, SAMPLE, value) %&gt;% \n  pivot_wider(names_from = \"SAMPLE\", values_fill = 0, values_from = value) %&gt;% \n  column_to_rownames(var = \"FeatureID\") %&gt;% \n  as.matrix\n\n# Align row names for each matrix\nrownames(tax_matrix) &lt;- row.names(asv_matrix)\n\nmetadata_cones &lt;- gr_substrate_fluid_asvs %&gt;% \n  select(SAMPLE, Type, VENT, SITE, SAMPLETYPE, Sample_or_Control) %&gt;% \n  distinct() %&gt;% \n  column_to_rownames(var = \"SAMPLE\")\n\n\n# Import asv and tax matrices\nASV = otu_table(asv_matrix, taxa_are_rows = TRUE)\nTAX = tax_table(tax_matrix)\nphylo_obj &lt;- phyloseq(ASV, TAX)\n\n# Import metadata as sample data in phyloseq\nsamplenames &lt;- sample_data(metadata_cones)\n\n# join as phyloseq object\nphyseq_wnames = merge_phyloseq(phylo_obj, samplenames)\n\n\n\n\nIn addition to shipboard milliQ blank samples, each substrate type had a ‘blank’ control, which was sampled at the same time, but never deployed in the microcolonizers (only processed at the same time in the lab).\n\n# When \"Control\" appears in \"Sample_or_Control column, this is a negative control\"\nsample_data(physeq_wnames)$is.neg &lt;- sample_data(physeq_wnames)$Sample_or_Control == \"Control\"\n\n\n# ID contaminants using Prevalence information\ncontam_prev &lt;- isContaminant(physeq_wnames, \n                               method=\"prevalence\", \n                               neg=\"is.neg\", \n                               threshold = 0.5, normalize = TRUE) \n\n# Report number of ASVs IDed as contamintants\ntable(contam_prev$contaminant)\n\n\n0.5 - this threshold will ID contaminants in all samples that are more prevalent in negative controls than in positive samples.\n\n\n\n\n\n# Subset contaminant ASVs\ncontams &lt;- filter(contam_prev, contaminant == \"TRUE\")\nlist_of_contam_asvs &lt;- as.character(row.names(contams))\n# length(list_of_contam_asvs)\n\ntaxa_contam &lt;- as.data.frame(tax_matrix) %&gt;% \n  rownames_to_column(var = \"FeatureID\") %&gt;% \n  filter(FeatureID %in% list_of_contam_asvs)\n# head(taxa_contam)\n\n\n# View(asv_wtax)\nasv_wtax_decon &lt;- gr_substrate_fluid_asvs %&gt;% \n  filter(!(FeatureID %in% list_of_contam_asvs)) %&gt;% \n  filter(!(Sample_or_Control == \"Control\"))\n\ntmp_orig &lt;- (gr_substrate_fluid_asvs %&gt;% filter(!(Sample_or_Control == \"Control\")))\n\n# Stats on lost\nx &lt;- length(unique(tmp_orig$FeatureID)); x\ny &lt;- length(unique(asv_wtax_decon$FeatureID)); y\n100*((y-x)/x) #0.43% of ASVs lost\na &lt;- sum(tmp_orig$value);a #3.1 million\nb &lt;- sum(asv_wtax_decon$value);b #2.89 million \n100*((b-a)/a)\n# Lost 5.5% of sequences from whole dataset.\n\n## Subsample to clean ASVs\nasv_wtax_wstats &lt;- gr_substrate_fluid_asvs %&gt;% \n  mutate(DECONTAM = case_when(\n    FeatureID %in% list_of_contam_asvs ~ \"FAIL\",\n    TRUE ~ \"PASS\"\n  ))\n\n\n\n\n\n\n# head(asv_wtax_wstats)\n\nasv_wtax_18 &lt;- asv_wtax_wstats |&gt; \n  filter(Sample_or_Control == \"Sample\") |&gt; \n  filter(DECONTAM == \"PASS\") |&gt; \n  select(SAMPLE, FeatureID, SEQUENCE_COUNT = value, Taxon, Domain,\n         Supergroup, Phylum, Class, Order, Family, Genus, Species, VENT, COORDINATES, SITE, SAMPLEID, SAMPLETYPE, DEPTH, temp, pH, percseawater, mg, h2, h2s, ch4, ProkConc, MC = Type) |&gt; \n  add_column(dataset = \"18S\") |&gt; \n  mutate(Substrate = case_when(\n    SAMPLETYPE == \"Microcolonizer\" ~ VENT\n  ))"
  },
  {
    "objectID": "import-qc-metabarcoding.html#decontaminate-sequence-library",
    "href": "import-qc-metabarcoding.html#decontaminate-sequence-library",
    "title": "Process metabarcoding data",
    "section": "",
    "text": "Import sample description text file, import as phyloseq library, and remove potential contaminate ASVs and sequences. Catalog total number of ASVs and sequences removed from analysis.\n\n\n\n# head(gr_substrate_fluid_asvs)\ntax_matrix &lt;- gr_substrate_fluid_asvs %&gt;% \n  select(FeatureID, Taxon) %&gt;% \n  distinct() %&gt;% \n  separate(Taxon, c(\"Domain\", \"Supergroup\", \n                  \"Phylum\", \"Class\", \"Order\",\n                  \"Family\", \"Genus\", \"Species\"), sep = \";\", remove = FALSE) %&gt;% \n  column_to_rownames(var = \"FeatureID\") %&gt;% \n  as.matrix\n\nasv_matrix &lt;- gr_substrate_fluid_asvs %&gt;% \n  select(FeatureID, SAMPLE, value) %&gt;% \n  pivot_wider(names_from = \"SAMPLE\", values_fill = 0, values_from = value) %&gt;% \n  column_to_rownames(var = \"FeatureID\") %&gt;% \n  as.matrix\n\n# Align row names for each matrix\nrownames(tax_matrix) &lt;- row.names(asv_matrix)\n\nmetadata_cones &lt;- gr_substrate_fluid_asvs %&gt;% \n  select(SAMPLE, Type, VENT, SITE, SAMPLETYPE, Sample_or_Control) %&gt;% \n  distinct() %&gt;% \n  column_to_rownames(var = \"SAMPLE\")\n\n\n# Import asv and tax matrices\nASV = otu_table(asv_matrix, taxa_are_rows = TRUE)\nTAX = tax_table(tax_matrix)\nphylo_obj &lt;- phyloseq(ASV, TAX)\n\n# Import metadata as sample data in phyloseq\nsamplenames &lt;- sample_data(metadata_cones)\n\n# join as phyloseq object\nphyseq_wnames = merge_phyloseq(phylo_obj, samplenames)\n\n\n\n\nIn addition to shipboard milliQ blank samples, each substrate type had a ‘blank’ control, which was sampled at the same time, but never deployed in the microcolonizers (only processed at the same time in the lab).\n\n# When \"Control\" appears in \"Sample_or_Control column, this is a negative control\"\nsample_data(physeq_wnames)$is.neg &lt;- sample_data(physeq_wnames)$Sample_or_Control == \"Control\"\n\n\n# ID contaminants using Prevalence information\ncontam_prev &lt;- isContaminant(physeq_wnames, \n                               method=\"prevalence\", \n                               neg=\"is.neg\", \n                               threshold = 0.5, normalize = TRUE) \n\n# Report number of ASVs IDed as contamintants\ntable(contam_prev$contaminant)\n\n\n0.5 - this threshold will ID contaminants in all samples that are more prevalent in negative controls than in positive samples.\n\n\n\n\n\n# Subset contaminant ASVs\ncontams &lt;- filter(contam_prev, contaminant == \"TRUE\")\nlist_of_contam_asvs &lt;- as.character(row.names(contams))\n# length(list_of_contam_asvs)\n\ntaxa_contam &lt;- as.data.frame(tax_matrix) %&gt;% \n  rownames_to_column(var = \"FeatureID\") %&gt;% \n  filter(FeatureID %in% list_of_contam_asvs)\n# head(taxa_contam)\n\n\n# View(asv_wtax)\nasv_wtax_decon &lt;- gr_substrate_fluid_asvs %&gt;% \n  filter(!(FeatureID %in% list_of_contam_asvs)) %&gt;% \n  filter(!(Sample_or_Control == \"Control\"))\n\ntmp_orig &lt;- (gr_substrate_fluid_asvs %&gt;% filter(!(Sample_or_Control == \"Control\")))\n\n# Stats on lost\nx &lt;- length(unique(tmp_orig$FeatureID)); x\ny &lt;- length(unique(asv_wtax_decon$FeatureID)); y\n100*((y-x)/x) #0.43% of ASVs lost\na &lt;- sum(tmp_orig$value);a #3.1 million\nb &lt;- sum(asv_wtax_decon$value);b #2.89 million \n100*((b-a)/a)\n# Lost 5.5% of sequences from whole dataset.\n\n## Subsample to clean ASVs\nasv_wtax_wstats &lt;- gr_substrate_fluid_asvs %&gt;% \n  mutate(DECONTAM = case_when(\n    FeatureID %in% list_of_contam_asvs ~ \"FAIL\",\n    TRUE ~ \"PASS\"\n  ))"
  },
  {
    "objectID": "import-qc-metabarcoding.html#qc-18s-rrna-gene-dataset",
    "href": "import-qc-metabarcoding.html#qc-18s-rrna-gene-dataset",
    "title": "Process metabarcoding data",
    "section": "",
    "text": "# head(asv_wtax_wstats)\n\nasv_wtax_18 &lt;- asv_wtax_wstats |&gt; \n  filter(Sample_or_Control == \"Sample\") |&gt; \n  filter(DECONTAM == \"PASS\") |&gt; \n  select(SAMPLE, FeatureID, SEQUENCE_COUNT = value, Taxon, Domain,\n         Supergroup, Phylum, Class, Order, Family, Genus, Species, VENT, COORDINATES, SITE, SAMPLEID, SAMPLETYPE, DEPTH, temp, pH, percseawater, mg, h2, h2s, ch4, ProkConc, MC = Type) |&gt; \n  add_column(dataset = \"18S\") |&gt; \n  mutate(Substrate = case_when(\n    SAMPLETYPE == \"Microcolonizer\" ~ VENT\n  ))"
  },
  {
    "objectID": "background.html",
    "href": "background.html",
    "title": "Background",
    "section": "",
    "text": "Microcolonizers (or ‘cones’) were deployed at the Gorda Ridge hydrothermal vent field. Each microcolonizer was placed over a region of visible diffuse fluid flow. A total of 6 microcolonizers were depeloyed at one time, pairs of experiments were picked up after 6, 7, and 8 days.\nEach microcolonizer chamber had 6 different substrates, so that diffuse fluid could reach each substrate. Temperature loggers also recorded temperature for the duration of the deployments. Substrates included: shell, riftia shell, quartz, pyrite, basalt, and olivine.\n\n\n\n\n\nMicrocolonizers at Mt. Edwards vent site. Credit: Ocean Exploration Trust\n\n\n\n\n\n\n\n\n\nRecovering microcolonizers with ROV Hercules. Credit: Ocean Exploration Trust\n\n\n\n\nUpon recovery of each experiment, substrates were saved for microscopy and molecular analysis. For the sequence data below (shell, quartz, and riftia), RNA was extracted, cDNA was created and the V4 18S rRNA hypervariable region was amplified and sequenced. Blank substrates (which sat with milliQ during the shipboard processing) were also sequenced alongside the experimental treatments.\n\n\n\n\n\nOpening up microcolonizers after recovery. Credit: Mirmalek\n\n\n\n\n\n\n\nHow does the microcolonizer community compare to the background, plume, and diffuse fluid community? How does it compare to the resident or cosmpolitan community?\nIf shared, do we know if these species have specific traits that would enable them to settle? Are there any other unifying traits for species detected at the substrate vs. diffuse fluid?\nHow does the community composition change over deployment length? 6, 7, vs. 8 days? Does temperature play a role in this?\nWhat species are detected across substrate types? vs. only found at 1 type of substrate?\nFor specific taxa like ciliates and metazoa, that make up a large proportion of the substrate community, how does species richness and evenness compare across substrate vs. vent fluid?\nAre differences in community composition & diversity at the substrates similar with the 18S vs. 16S data?\nWhat are the most commonly occurring pairs of 16S and 18S amplicons?\n\nApproach * Explore above questions with molecular data, include a combined approach with 16S and 18S. Start with 18S rRNA gene tag-sequence data first. * Pinpoint a few samples to explore for microscopy? * A very cool goal would be to do the network analyses and characterization of community composition and then capture the same or related organisms microscopically. * Explore bodonids and related taxa, especially paying attention to parasites. * Also look for saprophytes (fungi) * Examine pictures closer and look for presence of potential parasites to the limpets, else?\nHypotheses\n\nIn a previous microcolonizer experiment where organic, iron-rich, vs. mineral substrates were placed at a hydrothermal vent site, the molecular analysis did not show a significant difference in the community composition across substrates (Lopez-Garcia et al.). They found that within only 2 weeks, microaerophilic bodonids and ciliatese pioneereed the colonization process.\nDiversity of protists included: bodonids (Kinetoplastida), alveolatees (specifically ciliates, Perkinsozoa, Group I), metazoa, fungi, and radiolaria. Many divergent eukaryotic lineages.\nIn the previous study, a similar composition of taxa were found in the surrounding vent fluid and settled on the substrate. But there wree different metazoa (mainly polychaetes)"
  },
  {
    "objectID": "background.html#core-questions-related-to-protists",
    "href": "background.html#core-questions-related-to-protists",
    "title": "Background",
    "section": "",
    "text": "How does the microcolonizer community compare to the background, plume, and diffuse fluid community? How does it compare to the resident or cosmpolitan community?\nIf shared, do we know if these species have specific traits that would enable them to settle? Are there any other unifying traits for species detected at the substrate vs. diffuse fluid?\nHow does the community composition change over deployment length? 6, 7, vs. 8 days? Does temperature play a role in this?\nWhat species are detected across substrate types? vs. only found at 1 type of substrate?\nFor specific taxa like ciliates and metazoa, that make up a large proportion of the substrate community, how does species richness and evenness compare across substrate vs. vent fluid?\nAre differences in community composition & diversity at the substrates similar with the 18S vs. 16S data?\nWhat are the most commonly occurring pairs of 16S and 18S amplicons?\n\nApproach * Explore above questions with molecular data, include a combined approach with 16S and 18S. Start with 18S rRNA gene tag-sequence data first. * Pinpoint a few samples to explore for microscopy? * A very cool goal would be to do the network analyses and characterization of community composition and then capture the same or related organisms microscopically. * Explore bodonids and related taxa, especially paying attention to parasites. * Also look for saprophytes (fungi) * Examine pictures closer and look for presence of potential parasites to the limpets, else?\nHypotheses\n\nIn a previous microcolonizer experiment where organic, iron-rich, vs. mineral substrates were placed at a hydrothermal vent site, the molecular analysis did not show a significant difference in the community composition across substrates (Lopez-Garcia et al.). They found that within only 2 weeks, microaerophilic bodonids and ciliatese pioneereed the colonization process.\nDiversity of protists included: bodonids (Kinetoplastida), alveolatees (specifically ciliates, Perkinsozoa, Group I), metazoa, fungi, and radiolaria. Many divergent eukaryotic lineages.\nIn the previous study, a similar composition of taxa were found in the surrounding vent fluid and settled on the substrate. But there wree different metazoa (mainly polychaetes)"
  },
  {
    "objectID": "index.html#process-ibutton-data",
    "href": "index.html#process-ibutton-data",
    "title": "home",
    "section": "3.1 Process ibutton data",
    "text": "3.1 Process ibutton data\n\nlist_mc &lt;- read.delim(\"input-data/microcolonizer_list.txt\")\nhead(list_mc)\n\nDeployment of all Microcolonizers was at 2019-05-29, 20:59:57.659 (UTC) (also 8:59 PM UTC), which is 4:59PM EST or 16:59 PM EST\nFunction to import all ibutton data raw and process.\n\n# Recovered microcolonizers by ibutton IDs:\n## 1, 2, 3, 4, 5, 6\nrecovered &lt;- c(\"2019-06-05 14:19:00\",\"2019-06-04 16:04:00\",\"2019-06-04 16:11:00\",\"2019-06-05 14:23:00\",\"2019-06-06 18:28:00\",\"2019-06-06 18:31:00\")\n# Sys.timezone()\n# tmp_2 &lt;- logger2 %&gt;% add_column(MC = 2)\n# \n# logger1 &lt;- read.csv(\"input-data/Logger1Data.csv\", skip = 19)\n# logger2 &lt;- read.csv(\"input-data/Logger2Data.csv\", skip = 19)\n# x &lt;- 1\nmc_ids &lt;- c(1, 2, 3, 4, 5, 6)\n\nfor(num in mc_ids){\n  log_file &lt;- read.csv(paste(\"input-data/Logger\", num, \"Data.csv\", sep = \"\"), skip = 19)  \n  cat(\"Reading in log file number\", num, \"\\n\")\n  log_out &lt;- log_file %&gt;% \n    add_column(MC = num) %&gt;% \n    mutate(Parsed_time_EST = parse_date_time(Date.Time, \"%m/%d/%y %H:%M:%S p\", tz = \"America/New_York\")) %&gt;%\n    # Filter out irrelevant date before deployment\n    filter(Parsed_time_EST &gt; \"2019-05-29 18:59:00\") %&gt;% \n    filter(\n      Parsed_time_EST &lt; recovered[[num]]\n    )\n  if(!exists(\"log_files_all\")){\n    log_files_all &lt;- log_out\n  } else{\n    log_files_all &lt;- bind_rows(log_files_all, log_out)\n  }\n}\n# rm(log_out); rm(log_files_all)\n# head(log_out)\n# View(log_files_all)\n\n\n# Factor by colors and pairs of MCs\nlog_files_all$MC_ORDER &lt;- factor(log_files_all$MC, levels = mc_ids)\nmc_col &lt;- c(\"#d7301f\", \"#4a1486\", \"#9e9ac8\", \"#fc8d59\", \"#2171b5\", \"#6baed6\")\nnames(mc_col) &lt;- mc_ids\n\nGraph microcolonizer temperatures.\n\nggplot(log_files_all, aes(x = Parsed_time_EST, y = Value, group = as.factor(MC_ORDER), color = as.factor(MC_ORDER))) +\n  geom_path() +\n  scale_color_manual(values = mc_col) +\n  theme_classic(base_size = 14) +\n  labs(x = \"\", y = \"Temperature •C\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),\n        legend.title = element_blank())\n\n\nTemperature data\n\ntemps &lt;- ggplot(log_files_all, aes(x = Parsed_time_EST, y = Value, color = as.factor(MC_ORDER))) +\n  geom_step() +\n  scale_color_manual(values = mc_col) +\n  theme_classic(base_size = 14) +\n  labs(x = \"\", y = \"Temperature •C\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),\n        legend.title = element_blank())\ntemps\n\n\nsave(log_files_all, file = \"input-data/temp-data.RData\")"
  },
  {
    "objectID": "analysis-microcolonizers.html",
    "href": "analysis-microcolonizers.html",
    "title": "microcolonizer analysis",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "analysis-microcolonizers.html#quarto",
    "href": "analysis-microcolonizers.html#quarto",
    "title": "microcolonizer analysis",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "analysis-microcolonizers.html#running-code",
    "href": "analysis-microcolonizers.html#running-code",
    "title": "microcolonizer analysis",
    "section": "2 Running Code",
    "text": "2 Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "import-qc-metabarcoding.html#import-all-16s-rrna-tag-data",
    "href": "import-qc-metabarcoding.html#import-all-16s-rrna-tag-data",
    "title": "Process metabarcoding data",
    "section": "2.1 Import all 16S rRNA tag data",
    "text": "2.1 Import all 16S rRNA tag data\nThis includes from Gorda Ridge and substrates.\n\ntax_16 &lt;- read_delim(\"input-data/taxonomy.tsv\", delim = \"\\t\")\n\n\nasv_16s_gr &lt;- read_delim(\"input-data/samples16s-asv-table.tsv\", delim = \"\\t\", skip = 1)\n# head(asv_16s_gr)\n\n\nasv16s_wtax &lt;- asv_16s_gr %&gt;%\n  select(FeatureID = '#OTU ID', everything()) %&gt;%\n  pivot_longer(cols = !FeatureID,\n               names_to = \"SAMPLEID_16S\", values_to = \"SEQUENCE_COUNT\") %&gt;%\n  left_join((tax_16 |&gt; select(FeatureID = `Feature ID`, Taxon)))\n\nImport and combine metadata files\n\nmetadata_16s &lt;- read.csv(\"input-data/manifest-16s.csv\")\nmetadata_vent &lt;- read_delim(\"input-data/ventnames-gordaridge-16S.txt\", delim = \"\\t\")\n\n# head(metadata_vent)\nmetadata_gr_16 &lt;- metadata_16s |&gt; \n  select(SAMPLEID_16S = `sample.id`, MC, Substrate) |&gt; \n  add_column(Sampletype = \"Microcolonizer\",\n             SAMPLE_AMY = \"Substrate 16S\") |&gt; \n  bind_rows(metadata_vent)\n\n\nasv16s_df &lt;- asv16s_wtax |&gt; \n  mutate(TAXON = str_replace_all(Taxon, \".__\", \"\")) |&gt; \n  separate(TAXON, into = c(\"Domain\", \"Phylum\", \"Class\", \"Order\", \"Family\", \"Genus\", \"Species\"), remove = FALSE, sep = \"; \") |&gt; \n  left_join(metadata_gr_16) |&gt; \n  mutate(MC = paste(\"MC\", MC, sep = \"\")) |&gt; \n  add_column(dataset = \"16S\")\n# head(asv16s_df)\n\n\nsave(asv16s_df, asv_wtax_18, file = \"input-data/GR_Microcolonizer_data.RData\")"
  }
]